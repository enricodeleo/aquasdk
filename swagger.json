{
  "openapi": "3.0.3",
  "info": {
    "title": "@autocust/sales-assistant-api",
    "version": "2.5.4"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "FormField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "value"
        ],
        "example": {
          "id": "email",
          "value": "john.doe@example.com"
        }
      },
      "FormFieldsInput": {
        "type": "object",
        "properties": {
          "formFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "example": [
              {
                "id": "email",
                "value": "john2.doe@example.com"
              },
              {
                "id": "password",
                "value": "StrongPass12345"
              }
            ]
          }
        },
        "required": [
          "formFields"
        ]
      },
      "def-0": {
        "type": "object",
        "required": [
          "service",
          "operation",
          "name",
          "description",
          "method",
          "url_template",
          "param_schema"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "service": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "default": 1
          },
          "description": {
            "type": "string"
          },
          "icon_url": {
            "type": [
              "null",
              "string"
            ],
            "format": "uri"
          },
          "method": {
            "type": "string",
            "maxLength": 8
          },
          "url_template": {
            "type": "string"
          },
          "headers_template": {
            "type": "object"
          },
          "query_template": {
            "type": "object"
          },
          "body_template": {
            "type": [
              "null",
              "object"
            ]
          },
          "param_schema": {
            "type": "object"
          },
          "auth_type": {
            "type": "string",
            "maxLength": 16,
            "default": "none"
          },
          "credential_type": {
            "type": [
              "null",
              "string"
            ]
          },
          "response_selector": {
            "type": [
              "null",
              "string"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Skill"
      }
    }
  },
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User sign in",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormFieldsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed in"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/session/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session token",
        "responses": {
          "200": {
            "description": "Token refreshed"
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/account/email": {
      "patch": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/account/password": {
      "patch": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "minLength": 6
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assistants/{assistantId}/skills": {
      "get": {
        "tags": [
          "Assistant Skills"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assistantId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "skill_id",
                      "skill_version",
                      "assistant_id",
                      "display_name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "skill_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "skill_version": {
                        "type": "integer"
                      },
                      "assistant_id": {
                        "type": "integer"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean",
                        "default": true
                      },
                      "auth_config": {
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "override_url": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "override_headers": {
                        "type": "object"
                      },
                      "override_query": {
                        "type": "object"
                      },
                      "rate_limit_per_min": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "timeout_ms": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "AssistantSkill"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assistant Skills"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "skill_id",
                  "skill_version",
                  "assistant_id",
                  "display_name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "skill_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "skill_version": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  },
                  "auth_config": {
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "override_url": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "override_headers": {
                    "type": "object"
                  },
                  "override_query": {
                    "type": "object"
                  },
                  "rate_limit_per_min": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "timeout_ms": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assistantId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assistants/{assistantId}/skills/{id}": {
      "get": {
        "tags": [
          "Assistant Skills"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Assistant Skills"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "skill_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "skill_version": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  },
                  "auth_config": {
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "override_url": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "override_headers": {
                    "type": "object"
                  },
                  "override_query": {
                    "type": "object"
                  },
                  "rate_limit_per_min": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "timeout_ms": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Assistant Skills"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assistants/{id}/duplicate": {
      "get": {
        "summary": "Duplicate a existent assistant.",
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assistants": {
      "get": {
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "name",
                      "internal_name"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "public_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "internal_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "description": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "scope": {
                        "type": "string",
                        "description": "Defines the scope of the assistant (e.g., general, specific_project)",
                        "default": "general"
                      },
                      "model": {
                        "type": "string",
                        "description": "The AI model used by the assistant (e.g., gpt-4o, gpt-3.5-turbo)",
                        "default": "gpt-4.1-mini"
                      },
                      "temperature": {
                        "type": "number",
                        "description": "Controls randomness: lower values make output more focused, higher values make it more creative.",
                        "minimum": 0,
                        "maximum": 2,
                        "default": 0.3
                      },
                      "supported_languages": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^[a-z]{2}(-[A-Z]{2})?$"
                        },
                        "default": [
                          "en"
                        ]
                      },
                      "privacy_policy_urls": {
                        "type": "object",
                        "description": "Language code to privacy policy URL mapping",
                        "additionalProperties": {
                          "type": "string",
                          "format": "uri"
                        },
                        "default": {}
                      },
                      "allowed_domains": {
                        "type": "array",
                        "description": "Domains allowed to make API calls (without http/https)",
                        "items": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"
                        },
                        "default": []
                      },
                      "limits": {
                        "type": "object",
                        "description": "Usage limits for the assistant",
                        "properties": {
                          "per_device_monthly": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          },
                          "overall_monthly": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "per_device_monthly": null,
                          "overall_monthly": null
                        }
                      },
                      "lead_grabbing_form": {
                        "type": "object",
                        "description": "Configuration for the lead grabbing form",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "required_fields": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "name",
                                "email",
                                "phone"
                              ]
                            },
                            "default": []
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "enabled": false,
                          "required_fields": []
                        }
                      },
                      "human_takeover_enabled": {
                        "type": "boolean",
                        "description": "Whether human takeover is enabled",
                        "default": false
                      },
                      "notifications": {
                        "type": "object",
                        "description": "Notification settings for various events",
                        "properties": {
                          "conversation_usage_alert": {
                            "type": "object",
                            "properties": {
                              "threshold": {
                                "type": [
                                  "null",
                                  "integer"
                                ],
                                "minimum": 0
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                                }
                              },
                              "webhook": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "uri"
                              }
                            },
                            "additionalProperties": false,
                            "default": {
                              "emails": [],
                              "webhook": null
                            }
                          },
                          "token_usage_alert": {
                            "type": "object",
                            "properties": {
                              "threshold": {
                                "type": [
                                  "null",
                                  "integer"
                                ],
                                "minimum": 0
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                                }
                              },
                              "webhook": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "uri"
                              }
                            },
                            "additionalProperties": false,
                            "default": {
                              "emails": [],
                              "webhook": null
                            }
                          },
                          "on_new_lead": {
                            "type": "object",
                            "properties": {
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                                }
                              },
                              "webhook": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "uri"
                              }
                            },
                            "additionalProperties": false,
                            "default": {
                              "emails": [],
                              "webhook": null
                            }
                          },
                          "on_new_conversation": {
                            "type": "object",
                            "properties": {
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                                }
                              },
                              "webhook": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "uri"
                              }
                            },
                            "additionalProperties": false,
                            "default": {
                              "emails": [],
                              "webhook": null
                            }
                          },
                          "on_human_takeover_request": {
                            "type": "object",
                            "properties": {
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                                }
                              },
                              "webhook": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "uri"
                              }
                            },
                            "additionalProperties": false,
                            "default": {
                              "emails": [],
                              "webhook": null
                            }
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "conversation_usage_alert": {
                            "emails": [],
                            "webhook": null
                          },
                          "token_usage_alert": {
                            "emails": [],
                            "webhook": null
                          },
                          "on_new_lead": {
                            "emails": [],
                            "webhook": null
                          },
                          "on_new_conversation": {
                            "emails": [],
                            "webhook": null
                          },
                          "on_human_takeover_request": {
                            "emails": [],
                            "webhook": null
                          }
                        }
                      },
                      "settings": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "api_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "cms": {
                            "type": "string"
                          },
                          "theme": {
                            "type": "string",
                            "enum": [
                              "light",
                              "dark"
                            ]
                          },
                          "header_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "header_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "user_message_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "user_message_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "assistant_message_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "assistant_message_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "chat_button_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "chat_button_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "cta_button_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "cta_button_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "cta_button_hover_bg_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "cta_button_hover_text_color": {
                            "type": "string",
                            "pattern": "^#?[0-9a-fA-F]{6}$"
                          },
                          "initial_message": {
                            "type": "string"
                          },
                          "button_icon": {
                            "type": "string"
                          },
                          "user_message_icon": {
                            "type": "string"
                          },
                          "bot_message_icon": {
                            "type": "string"
                          },
                          "position": {
                            "type": "string",
                            "enum": [
                              "top-left",
                              "top-right",
                              "bottom-left",
                              "bottom-right"
                            ]
                          },
                          "cta_text": {
                            "type": "string"
                          },
                          "open_in_new_tab": {
                            "type": "boolean"
                          },
                          "enable_utm": {
                            "type": "boolean"
                          },
                          "persistent_session": {
                            "type": "boolean"
                          },
                          "session_expiration": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "button_overlay_text": {
                            "type": "string"
                          },
                          "button_overlay_delay": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "font_size": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "footer_text": {
                            "type": "string"
                          },
                          "show_powered_by": {
                            "type": "boolean"
                          },
                          "height": {
                            "type": "integer",
                            "minimum": 300,
                            "maximum": 1920,
                            "description": "Widget height in pixels"
                          },
                          "width": {
                            "type": "integer",
                            "minimum": 300,
                            "maximum": 1920,
                            "description": "Widget width in pixels"
                          }
                        },
                        "default": {}
                      },
                      "predefined_questions": {
                        "type": "array",
                        "description": "List of predefined questions for the assistant",
                        "items": {
                          "type": "string",
                          "minLength": 1
                        },
                        "default": []
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Assistant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assistants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "name",
                  "internal_name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "public_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "internal_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "scope": {
                    "type": "string",
                    "description": "Defines the scope of the assistant (e.g., general, specific_project)",
                    "default": "general"
                  },
                  "model": {
                    "type": "string",
                    "description": "The AI model used by the assistant (e.g., gpt-4o, gpt-3.5-turbo)",
                    "default": "gpt-4.1-mini"
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Controls randomness: lower values make output more focused, higher values make it more creative.",
                    "minimum": 0,
                    "maximum": 2,
                    "default": 0.3
                  },
                  "supported_languages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-z]{2}(-[A-Z]{2})?$"
                    },
                    "default": [
                      "en"
                    ]
                  },
                  "privacy_policy_urls": {
                    "type": "object",
                    "description": "Language code to privacy policy URL mapping",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uri"
                    },
                    "default": {}
                  },
                  "allowed_domains": {
                    "type": "array",
                    "description": "Domains allowed to make API calls (without http/https)",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"
                    },
                    "default": []
                  },
                  "limits": {
                    "type": "object",
                    "description": "Usage limits for the assistant",
                    "properties": {
                      "per_device_monthly": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0
                      },
                      "overall_monthly": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "per_device_monthly": null,
                      "overall_monthly": null
                    }
                  },
                  "lead_grabbing_form": {
                    "type": "object",
                    "description": "Configuration for the lead grabbing form",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "required_fields": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "name",
                            "email",
                            "phone"
                          ]
                        },
                        "default": []
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "enabled": false,
                      "required_fields": []
                    }
                  },
                  "human_takeover_enabled": {
                    "type": "boolean",
                    "description": "Whether human takeover is enabled",
                    "default": false
                  },
                  "notifications": {
                    "type": "object",
                    "description": "Notification settings for various events",
                    "properties": {
                      "conversation_usage_alert": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "token_usage_alert": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_new_lead": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_new_conversation": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_human_takeover_request": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "conversation_usage_alert": {
                        "emails": [],
                        "webhook": null
                      },
                      "token_usage_alert": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_new_lead": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_new_conversation": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_human_takeover_request": {
                        "emails": [],
                        "webhook": null
                      }
                    }
                  },
                  "settings": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "api_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "cms": {
                        "type": "string"
                      },
                      "theme": {
                        "type": "string",
                        "enum": [
                          "light",
                          "dark"
                        ]
                      },
                      "header_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "header_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "user_message_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "user_message_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "assistant_message_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "assistant_message_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "chat_button_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "chat_button_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_hover_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_hover_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "initial_message": {
                        "type": "string"
                      },
                      "button_icon": {
                        "type": "string"
                      },
                      "user_message_icon": {
                        "type": "string"
                      },
                      "bot_message_icon": {
                        "type": "string"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "top-left",
                          "top-right",
                          "bottom-left",
                          "bottom-right"
                        ]
                      },
                      "cta_text": {
                        "type": "string"
                      },
                      "open_in_new_tab": {
                        "type": "boolean"
                      },
                      "enable_utm": {
                        "type": "boolean"
                      },
                      "persistent_session": {
                        "type": "boolean"
                      },
                      "session_expiration": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "button_overlay_text": {
                        "type": "string"
                      },
                      "button_overlay_delay": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "font_size": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "footer_text": {
                        "type": "string"
                      },
                      "show_powered_by": {
                        "type": "boolean"
                      },
                      "height": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 1920,
                        "description": "Widget height in pixels"
                      },
                      "width": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 1920,
                        "description": "Widget width in pixels"
                      }
                    },
                    "default": {}
                  },
                  "predefined_questions": {
                    "type": "array",
                    "description": "List of predefined questions for the assistant",
                    "items": {
                      "type": "string",
                      "minLength": 1
                    },
                    "default": []
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assistants/{id}": {
      "get": {
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Assistants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "public_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "internal_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "scope": {
                    "type": "string",
                    "description": "Defines the scope of the assistant (e.g., general, specific_project)",
                    "default": "general"
                  },
                  "model": {
                    "type": "string",
                    "description": "The AI model used by the assistant (e.g., gpt-4o, gpt-3.5-turbo)",
                    "default": "gpt-4.1-mini"
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Controls randomness: lower values make output more focused, higher values make it more creative.",
                    "minimum": 0,
                    "maximum": 2,
                    "default": 0.3
                  },
                  "supported_languages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-z]{2}(-[A-Z]{2})?$"
                    },
                    "default": [
                      "en"
                    ]
                  },
                  "privacy_policy_urls": {
                    "type": "object",
                    "description": "Language code to privacy policy URL mapping",
                    "additionalProperties": {
                      "type": "string",
                      "format": "uri"
                    },
                    "default": {}
                  },
                  "allowed_domains": {
                    "type": "array",
                    "description": "Domains allowed to make API calls (without http/https)",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"
                    },
                    "default": []
                  },
                  "limits": {
                    "type": "object",
                    "description": "Usage limits for the assistant",
                    "properties": {
                      "per_device_monthly": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0
                      },
                      "overall_monthly": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 0
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "per_device_monthly": null,
                      "overall_monthly": null
                    }
                  },
                  "lead_grabbing_form": {
                    "type": "object",
                    "description": "Configuration for the lead grabbing form",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "required_fields": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "name",
                            "email",
                            "phone"
                          ]
                        },
                        "default": []
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "enabled": false,
                      "required_fields": []
                    }
                  },
                  "human_takeover_enabled": {
                    "type": "boolean",
                    "description": "Whether human takeover is enabled",
                    "default": false
                  },
                  "notifications": {
                    "type": "object",
                    "description": "Notification settings for various events",
                    "properties": {
                      "conversation_usage_alert": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "token_usage_alert": {
                        "type": "object",
                        "properties": {
                          "threshold": {
                            "type": [
                              "null",
                              "integer"
                            ],
                            "minimum": 0
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_new_lead": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_new_conversation": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      },
                      "on_human_takeover_request": {
                        "type": "object",
                        "properties": {
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
                            }
                          },
                          "webhook": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "uri"
                          }
                        },
                        "additionalProperties": false,
                        "default": {
                          "emails": [],
                          "webhook": null
                        }
                      }
                    },
                    "additionalProperties": false,
                    "default": {
                      "conversation_usage_alert": {
                        "emails": [],
                        "webhook": null
                      },
                      "token_usage_alert": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_new_lead": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_new_conversation": {
                        "emails": [],
                        "webhook": null
                      },
                      "on_human_takeover_request": {
                        "emails": [],
                        "webhook": null
                      }
                    }
                  },
                  "settings": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "api_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "cms": {
                        "type": "string"
                      },
                      "theme": {
                        "type": "string",
                        "enum": [
                          "light",
                          "dark"
                        ]
                      },
                      "header_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "header_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "user_message_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "user_message_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "assistant_message_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "assistant_message_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "chat_button_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "chat_button_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_hover_bg_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "cta_button_hover_text_color": {
                        "type": "string",
                        "pattern": "^#?[0-9a-fA-F]{6}$"
                      },
                      "initial_message": {
                        "type": "string"
                      },
                      "button_icon": {
                        "type": "string"
                      },
                      "user_message_icon": {
                        "type": "string"
                      },
                      "bot_message_icon": {
                        "type": "string"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "top-left",
                          "top-right",
                          "bottom-left",
                          "bottom-right"
                        ]
                      },
                      "cta_text": {
                        "type": "string"
                      },
                      "open_in_new_tab": {
                        "type": "boolean"
                      },
                      "enable_utm": {
                        "type": "boolean"
                      },
                      "persistent_session": {
                        "type": "boolean"
                      },
                      "session_expiration": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "button_overlay_text": {
                        "type": "string"
                      },
                      "button_overlay_delay": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "font_size": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "footer_text": {
                        "type": "string"
                      },
                      "show_powered_by": {
                        "type": "boolean"
                      },
                      "height": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 1920,
                        "description": "Widget height in pixels"
                      },
                      "width": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 1920,
                        "description": "Widget width in pixels"
                      }
                    },
                    "default": {}
                  },
                  "predefined_questions": {
                    "type": "array",
                    "description": "List of predefined questions for the assistant",
                    "items": {
                      "type": "string",
                      "minLength": 1
                    },
                    "default": []
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Assistants"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2
                  }
                },
                "required": [
                  "email",
                  "password",
                  "first_name",
                  "last_name",
                  "country_code"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/auth/{id}": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "b09fe6c7-4228-4ed0-bf01-282f660bdb56"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ws-chat": {
      "get": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/reset-session": {
      "delete": {
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "is_individual"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "is_individual": {
                        "type": "boolean"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "last_name": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "website": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "uri"
                      },
                      "vat_id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "tax_code": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "sdi_code": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "pec_email": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "email"
                      },
                      "addr_line1": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "addr_line2": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "postal_code": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "city": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "region": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "country_code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "phone": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "plan_tier": {
                        "type": "string",
                        "enum": [
                          "free",
                          "pro",
                          "enterprise"
                        ]
                      },
                      "payment_provider": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "enum": [
                          "stripe",
                          "paypal"
                        ]
                      },
                      "external_customer_id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "external_subscription_id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "subscription_status": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "current_period_end": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "date-time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Company"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "is_individual"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "is_individual": {
                    "type": "boolean"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "last_name": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "website": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "uri"
                  },
                  "vat_id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "tax_code": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "sdi_code": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "pec_email": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "email"
                  },
                  "addr_line1": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "addr_line2": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "city": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "region": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "country_code": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "phone": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "plan_tier": {
                    "type": "string",
                    "enum": [
                      "free",
                      "pro",
                      "enterprise"
                    ]
                  },
                  "payment_provider": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "enum": [
                      "stripe",
                      "paypal"
                    ]
                  },
                  "external_customer_id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "external_subscription_id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "subscription_status": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "current_period_end": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "is_individual": {
                    "type": "boolean"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "last_name": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "website": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "uri"
                  },
                  "vat_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tax_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sdi_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "pec_email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email"
                  },
                  "addr_line1": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "addr_line2": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "region": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country_code": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "phone": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "plan_tier": {
                    "type": "string",
                    "enum": [
                      "free",
                      "pro",
                      "enterprise"
                    ]
                  },
                  "payment_provider": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "stripe",
                      "paypal"
                    ]
                  },
                  "external_customer_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "external_subscription_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "subscription_status": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "current_period_end": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/contents": {
      "get": {
        "tags": [
          "Contents"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "source_id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "source_id": {
                        "type": "integer"
                      },
                      "category": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "image": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "uri-reference"
                      },
                      "url": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "brand": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "brand_boost": {
                        "type": [
                          "number"
                        ]
                      },
                      "ean": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "short_description": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "price": {
                        "type": [
                          "null",
                          "number"
                        ]
                      },
                      "regular_price": {
                        "type": [
                          "null",
                          "number"
                        ]
                      },
                      "description": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "variants": {
                        "type": [
                          "null",
                          "array"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "certifications": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "in_stock": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "instructions": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "warnings": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "features": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "summary": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "indexed": {
                        "type": "boolean",
                        "default": false
                      },
                      "summarised": {
                        "type": "boolean",
                        "default": false
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Content"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "source_id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "source_id": {
                    "type": "integer"
                  },
                  "category": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "image": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "uri-reference"
                  },
                  "url": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "brand": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "brand_boost": {
                    "type": [
                      "number"
                    ]
                  },
                  "ean": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "short_description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "price": {
                    "type": [
                      "null",
                      "number"
                    ]
                  },
                  "regular_price": {
                    "type": [
                      "null",
                      "number"
                    ]
                  },
                  "description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "variants": {
                    "type": [
                      "null",
                      "array"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "certifications": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "in_stock": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "instructions": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "warnings": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "features": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "summary": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": false
                  },
                  "summarised": {
                    "type": "boolean",
                    "default": false
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "tags": [
          "Contents"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Contents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "source_id": {
                    "type": "integer"
                  },
                  "category": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "image": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "uri-reference"
                  },
                  "url": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "brand": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "brand_boost": {
                    "type": [
                      "number"
                    ]
                  },
                  "ean": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "short_description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "price": {
                    "type": [
                      "null",
                      "number"
                    ]
                  },
                  "regular_price": {
                    "type": [
                      "null",
                      "number"
                    ]
                  },
                  "description": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "variants": {
                    "type": [
                      "null",
                      "array"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "certifications": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "in_stock": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "instructions": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "warnings": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "features": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "summary": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "indexed": {
                    "type": "boolean",
                    "default": false
                  },
                  "summarised": {
                    "type": "boolean",
                    "default": false
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Contents"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/conversations/export": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where",
            "required": false,
            "description": "JSON stringified filter object, e.g. {\"userId\": \"abc\"}"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false,
            "description": "Number of records to skip (for pagination)"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of records to return"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "Sort order, e.g. \"created_at DESC\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "Full-text search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "session_id",
                      "role"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "session_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant",
                          "system",
                          "tool",
                          "developer"
                        ]
                      },
                      "content": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "tool_call_id": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Conversation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conversations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "session_id",
                  "role"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "session_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "assistant",
                      "system",
                      "tool",
                      "developer"
                    ]
                  },
                  "content": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "tool_call_id": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/conversations/{id}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Conversations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "session_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "assistant",
                      "system",
                      "tool",
                      "developer"
                    ]
                  },
                  "content": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tool_call_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/files/{id}/serve": {
      "get": {
        "summary": "Serve a file for inline display",
        "tags": [
          "Files"
        ],
        "description": "Serves a specific file by its ID for inline display in the browser (e.g., images, PDFs).",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The database ID of the file."
          }
        ],
        "responses": {
          "200": {
            "description": "File stream for inline display.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "File stream for inline display.",
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access to the file is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden - Access to the file is not allowed.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The file record or physical file does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found - The file record or physical file does not exist.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Internal Server Error.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "original_name",
                      "path",
                      "mimetype"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "original_name": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "mimetype": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "File"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "original_name",
                  "path",
                  "mimetype"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "original_name": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "original_name": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "mimetype": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "summary": "Upload a new file",
        "tags": [
          "Files"
        ],
        "description": "Uploads a single file using multipart/form-data. The file will be stored and a database record created.",
        "responses": {
          "201": {
            "description": "File uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "File uploaded successfully.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The ID of the uploaded file record."
                    },
                    "name": {
                      "type": "string",
                      "description": "The stored name of the file."
                    },
                    "size": {
                      "type": "integer",
                      "description": "The size of the file in bytes."
                    },
                    "mimetype": {
                      "type": "string",
                      "description": "The MIME type of the file."
                    },
                    "path": {
                      "type": "string",
                      "description": "The storage path of the file."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input, unsupported file type, or empty file.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad Request - Invalid input, unsupported file type, or empty file.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large - File exceeds maximum allowed size.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Payload Too Large - File exceeds maximum allowed size.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Internal Server Error.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}/download": {
      "get": {
        "summary": "Download a file",
        "tags": [
          "Files"
        ],
        "description": "Downloads a specific file by its ID, forcing a download dialog.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The database ID of the file."
          }
        ],
        "responses": {
          "200": {
            "description": "File stream for download.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "File stream for download.",
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access to the file is not allowed.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden - Access to the file is not allowed.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The file record or physical file does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found - The file record or physical file does not exist.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Internal Server Error.",
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "company_id",
                      "inviter_user_id",
                      "expires_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "token": {
                        "type": "string",
                        "minLength": 32,
                        "maxLength": 32
                      },
                      "company_id": {
                        "type": "integer"
                      },
                      "invitee_email": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "email"
                      },
                      "inviter_user_id": {
                        "type": "integer"
                      },
                      "accepted_by_user_id": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "accepted",
                          "expired",
                          "revoked"
                        ],
                        "default": "pending"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Invitation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "company_id",
                  "inviter_user_id",
                  "expires_at"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "token": {
                    "type": "string",
                    "minLength": 32,
                    "maxLength": 32
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "invitee_email": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "email"
                  },
                  "inviter_user_id": {
                    "type": "integer"
                  },
                  "accepted_by_user_id": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "expired",
                      "revoked"
                    ],
                    "default": "pending"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/invitations/{id}": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Invitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "token": {
                    "type": "string",
                    "minLength": 32,
                    "maxLength": 32
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "invitee_email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email"
                  },
                  "inviter_user_id": {
                    "type": "integer"
                  },
                  "accepted_by_user_id": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "expired",
                      "revoked"
                    ],
                    "default": "pending"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Invitations"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/join": {
      "post": {
        "tags": [
          "Joins"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nonce": {
                    "type": "string"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string",
                    "maxLength": 2
                  }
                },
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "required": [
                          "nonce"
                        ]
                      },
                      {
                        "required": [
                          "country_code"
                        ]
                      }
                    ]
                  },
                  {
                    "not": {
                      "required": [
                        "nonce",
                        "company_name"
                      ]
                    }
                  }
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/join/invite": {
      "post": {
        "summary": "Create an invite to join a company",
        "tags": [
          "Joins"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invitee_email": {
                    "type": "string",
                    "format": "email"
                  },
                  "company_id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "invitee_email": "john.doe@example.com",
                  "company_id": 1
                },
                "required": [],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/conversations/total": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false,
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "role",
            "required": false,
            "description": "Role to filter conversations by"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false,
            "description": "Assistant internal ID (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/conversations/daily": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "role",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/sessions/total": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false,
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false,
            "description": "Assistant internal ID (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/sessions/daily": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false,
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false,
            "description": "Assistant internal ID (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/usages/total": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false,
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "required": false,
            "description": "Model name (optional)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false,
            "description": "Assistant internal ID (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/usages/daily": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "from",
            "required": false,
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "to",
            "required": false,
            "description": "End date (YYYY-MM-DD)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model",
            "required": false,
            "description": "Model name (optional)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "assistant-id",
            "required": false,
            "description": "Assistant internal ID (optional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/modelusage": {
      "get": {
        "tags": [
          "ModelUsage"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "session_id",
                      "request_type",
                      "model",
                      "assistant_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "assistant_id": {
                        "type": "integer"
                      },
                      "session_id": {
                        "type": "string"
                      },
                      "request_type": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "prompt_tokens": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "completion_tokens": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "cached_tokens": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "total_tokens": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "response_time_ms": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModelUsage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "session_id",
                  "request_type",
                  "model",
                  "assistant_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "session_id": {
                    "type": "string"
                  },
                  "request_type": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "prompt_tokens": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "completion_tokens": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "cached_tokens": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "total_tokens": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "response_time_ms": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/modelusage/{id}": {
      "get": {
        "tags": [
          "ModelUsage"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "ModelUsage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "session_id": {
                    "type": "string"
                  },
                  "request_type": {
                    "type": "string"
                  },
                  "model": {
                    "type": "string"
                  },
                  "prompt_tokens": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "completion_tokens": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "cached_tokens": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "total_tokens": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "response_time_ms": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelUsage"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "title",
                      "content",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "minLength": 1
                      },
                      "content": {
                        "type": "string",
                        "minLength": 1
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "info",
                          "success",
                          "warning",
                          "error"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "delivered"
                        ],
                        "default": "pending"
                      },
                      "notify": {
                        "type": "boolean",
                        "default": true
                      },
                      "read": {
                        "type": "boolean",
                        "default": false
                      },
                      "company_id": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 1
                      },
                      "user_id": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 1
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Notification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "content",
                  "type"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "info",
                      "success",
                      "warning",
                      "error"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "delivered"
                    ],
                    "default": "pending"
                  },
                  "notify": {
                    "type": "boolean",
                    "default": true
                  },
                  "read": {
                    "type": "boolean",
                    "default": false
                  },
                  "company_id": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": 1
                  },
                  "user_id": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "info",
                      "success",
                      "warning",
                      "error"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "delivered"
                    ],
                    "default": "pending"
                  },
                  "notify": {
                    "type": "boolean",
                    "default": true
                  },
                  "read": {
                    "type": "boolean",
                    "default": false
                  },
                  "company_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1
                  },
                  "user_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/auth/password/recover": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/auth/password/reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "newPassword"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/preview/{agentId}": {
      "get": {
        "summary": "Preview assistant widget settings",
        "tags": [
          "Preview"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "agentId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "api_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "cms": {
                      "type": "string"
                    },
                    "theme": {
                      "type": "string",
                      "enum": [
                        "light",
                        "dark"
                      ]
                    },
                    "header_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "header_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "user_message_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "user_message_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "assistant_message_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "assistant_message_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "chat_button_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "chat_button_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "cta_button_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "cta_button_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "cta_button_hover_bg_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "cta_button_hover_text_color": {
                      "type": "string",
                      "pattern": "^#?[0-9a-fA-F]{6}$"
                    },
                    "initial_message": {
                      "type": "string"
                    },
                    "button_icon": {
                      "type": "string"
                    },
                    "user_message_icon": {
                      "type": "string"
                    },
                    "bot_message_icon": {
                      "type": "string"
                    },
                    "position": {
                      "type": "string",
                      "enum": [
                        "top-left",
                        "top-right",
                        "bottom-left",
                        "bottom-right"
                      ]
                    },
                    "cta_text": {
                      "type": "string"
                    },
                    "open_in_new_tab": {
                      "type": "boolean"
                    },
                    "enable_utm": {
                      "type": "boolean"
                    },
                    "persistent_session": {
                      "type": "boolean"
                    },
                    "session_expiration": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "button_overlay_text": {
                      "type": "string"
                    },
                    "button_overlay_delay": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "font_size": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "footer_text": {
                      "type": "string"
                    },
                    "show_powered_by": {
                      "type": "boolean"
                    },
                    "height": {
                      "type": "integer",
                      "minimum": 300,
                      "maximum": 1920,
                      "description": "Widget height in pixels"
                    },
                    "width": {
                      "type": "integer",
                      "minimum": 300,
                      "maximum": 1920,
                      "description": "Widget width in pixels"
                    }
                  },
                  "default": {}
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{sessionId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "sessionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/prompts": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "content"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "assistant_id": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "minimum": 1
                      },
                      "name": {
                        "type": "string",
                        "default": "default",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "content": {
                        "type": "string",
                        "minLength": 1
                      },
                      "version": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Prompt"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prompts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "content"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "minimum": 1
                  },
                  "name": {
                    "type": "string",
                    "default": "default",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "version": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/prompts/{id}": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Prompts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1
                  },
                  "name": {
                    "type": "string",
                    "default": "default",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "version": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompts"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/qa": {
      "get": {
        "tags": [
          "QA"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "question",
                      "assistant_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "assistant_id": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "question": {
                        "type": "string",
                        "default": "default",
                        "minLength": 1
                      },
                      "answer": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "minLength": 1
                      },
                      "products": {
                        "type": [
                          "null",
                          "object"
                        ]
                      },
                      "rating": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "default": 1,
                        "minimum": 1,
                        "maximum": 5
                      },
                      "prompt_id": {
                        "type": [
                          "integer"
                        ],
                        "minimum": 1
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "QA"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QA"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "question",
                  "assistant_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "question": {
                    "type": "string",
                    "default": "default",
                    "minLength": 1
                  },
                  "answer": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "minLength": 1
                  },
                  "products": {
                    "type": [
                      "null",
                      "object"
                    ]
                  },
                  "rating": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "default": 1,
                    "minimum": 1,
                    "maximum": 5
                  },
                  "prompt_id": {
                    "type": [
                      "integer"
                    ],
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/qa/{id}": {
      "get": {
        "tags": [
          "QA"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "QA"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "question": {
                    "type": "string",
                    "default": "default",
                    "minLength": 1
                  },
                  "answer": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 1
                  },
                  "products": {
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "rating": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "default": 1,
                    "minimum": 1,
                    "maximum": 5
                  },
                  "prompt_id": {
                    "type": [
                      "integer"
                    ],
                    "minimum": 1
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "QA"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "assistant_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "assistant_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "email": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "email"
                      },
                      "phone": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "minLength": 5,
                        "maxLength": 50
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Session"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "assistant_id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "email": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "email"
                  },
                  "phone": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "minLength": 5,
                    "maxLength": 50
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email"
                  },
                  "phone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 5,
                    "maxLength": 50
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/skill-runner/{assistantSkillId}/test": {
      "post": {
        "summary": "Test a configured skill instance",
        "tags": [
          "Skill Tests"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "object",
                    "description": "Key-value pairs for template placeholders.",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "path",
            "name": "assistantSkillId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/skills": {
      "get": {
        "summary": "List all available skill blueprints",
        "tags": [
          "Skills"
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new skill blueprint (Admin only)",
        "tags": [
          "Skills"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-0"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "get": {
        "tags": [
          "Sources"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "assistant_id",
                      "type",
                      "config",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "assistant_id": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "website",
                          "pdf",
                          "sitemap",
                          "product_feed",
                          "text"
                        ]
                      },
                      "config": {
                        "type": "object",
                        "additionalProperties": true,
                        "properties": {
                          "url": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          }
                        }
                      },
                      "last_crawled_at": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "date-time"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "new",
                          "running",
                          "error",
                          "done"
                        ],
                        "default": "new"
                      },
                      "error_message": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "crawl": {
                        "type": "boolean",
                        "default": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Source"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sources"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "assistant_id",
                  "type",
                  "config",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "website",
                      "pdf",
                      "sitemap",
                      "product_feed",
                      "text"
                    ]
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "url": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  },
                  "last_crawled_at": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "new",
                      "running",
                      "error",
                      "done"
                    ],
                    "default": "new"
                  },
                  "error_message": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "crawl": {
                    "type": "boolean",
                    "default": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/sources/{id}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Sources"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "assistant_id": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "website",
                      "pdf",
                      "sitemap",
                      "product_feed",
                      "text"
                    ]
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                      "url": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "fileName": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  },
                  "last_crawled_at": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "new",
                      "running",
                      "error",
                      "done"
                    ],
                    "default": "new"
                  },
                  "error_message": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "crawl": {
                    "type": "boolean",
                    "default": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/templatecategories": {
      "get": {
        "tags": [
          "TemplateCategories"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TemplateCategories"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/templatecategories/{id}": {
      "get": {
        "tags": [
          "TemplateCategories"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "TemplateCategories"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "TemplateCategories"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "content"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "content": {
                        "type": "string",
                        "minLength": 1
                      },
                      "template_category_id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "Template"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "content"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "template_category_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/templates/{id}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Templates"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "minLength": 1
                  },
                  "template_category_id": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ],
        "description": "Retrieves the profile of the currently authenticated user, including the companies they belong to.",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "last_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "locale": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 5
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "st_user_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "companies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "st_user_id",
                    "companies"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "object",
                "string"
              ]
            },
            "in": "query",
            "name": "where",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "skip",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sort",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-company-id",
            "required": true,
            "description": "Company ID per multi-tenant access"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of rows with pagination headers",
            "headers": {
              "X-Total-Count": {
                "schema": {
                  "schema": {
                    "type": "integer",
                    "example": 73
                  }
                },
                "description": "Total number of records matching the `where` filter (ignores limit / skip)"
              },
              "X-Pagination-JSON": {
                "schema": {
                  "schema": {
                    "type": "string",
                    "example": "{\"count\":73,\"limit\":10,\"skip\":20,\"sort\":null}"
                  }
                },
                "description": "JSON-encoded metadata: {count,limit,skip,sort}"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of rows with pagination headers",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "first_name",
                      "last_name",
                      "email",
                      "st_user_id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "last_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "locale": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 5
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "st_user_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "title": "User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "st_user_id"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "first_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "locale": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 5
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "st_user_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "first_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "locale": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 5
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "st_user_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/webhooks/whatsapp": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "security": [
          {}
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}